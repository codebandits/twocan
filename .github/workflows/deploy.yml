name: Deploy
on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: The version to deploy.
        required: true
      environment:
        type: choice
        description: The environment defined within the build to deploy.
        required: true
        options:
          - e2e
          - acceptance
          - production
env:
  GCP_PROJECT: distribrewtion-201323
  REGISTRY: us-central1-docker.pkg.dev/distribrewtion-201323/twocan
  REGISTRY_USERNAME: _json_key
  REGISTRY_PASSWORD: ${{ secrets.GCP_KEY }}
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v2
      - name: Deploy E2E
        uses: ./.github/actions/deploy-build
        with:
          app: twocan
          environment: ${{ github.event.inputs.environment }}
          version: ${{ github.event.inputs.version }}
          registry: ${{ env.REGISTRY }}
          image: build
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
          cluster: farfalle
          gcp_project: ${{ env.GCP_PROJECT }}
          gcp_service_account_key: ${{ secrets.GCP_KEY }}
          gcp_region: us-central1
          github_token: ${{ secrets.GITHUB_TOKEN }}
  slack-notification:
    name: Slack Notificaiton
    runs-on: ubuntu-latest
    needs:
      - deploy
    if: always()
    steps:
      - name: Create message
        id: create-message
        shell: bash
        run: |
          set -euo pipefail

          version=${{ github.event.inputs.version }}
          environment=${{ github.event.inputs.environment }}
          deploy_result=${{ needs.deploy.result }}

          github_actions_run_url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
          message_file=$(mktemp -d)/message.txt
          touch $message_file

          function processIfMessage {
            if [ -s $message_file ]
            then
              echo ::group::Setting message
              echo "[View Run]($github_actions_run_url)" >> $message_file
              message=$(cat $message_file)
              echo Message is
              echo $message
              echo ::endgroup::

              echo ::set-output name=message::$message
              exit
            fi
          }

          if $deploy_acceptance_result == 'success'
          then
            echo 🚀 Twocan v$version deployed to $environment. >> $message_file
          else
            echo ❌ Twocan v$version deploy to $environment $frontend_result. >> $message_file
          fi

          processIfMessage
      - name: Slack
        id: slack
        uses: slackapi/slack-github-action@v1.16.0
        with:
          channel-id: '#test-notifications'
          slack-message: ${{ steps.create-message.outputs.message }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
