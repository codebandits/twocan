name: Deploy Build
description: Deploys a build in a standard fashion.
inputs:
  app:
    description: The name of the app.
    required: true
  environment:
    description: The environment defined within the build to deploy.
    required: true
  version:
    description: The version to deploy.
    required: true
  registry:
    description: The registry where the build image is stored.
    required: true
  image:
    description: The name of the build image to be deployed.
    required: true
  username:
    description: The username used to authenticate with the registry.
    required: true
  password:
    description: The password used to authenticate with the registry.
    required: true
  cluster:
    description: The k8s cluster name of the deployment.
    required: true
  gcp_project:
    description: The GCP project ID of the deployment.
    required: true
  gcp_service_account_key:
    description: The GCP service account used for authentication.
    required: true
  gcp_region:
    description: The GCP region of the deployment.
    required: true
  github_token:
    description: Github token to use to avoid rate limits.
    required: true
runs:
  using: composite
  steps:
    - name: Install Carvel Tools
      uses: vmware-tanzu/carvel-setup-action@v1
      with:
        token: ${{ inputs.github_token }}
        only: imgpkg, kapp
    - name: Set up gcloud Cloud SDK environment
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ inputs.gcp_project }}
        service_account_key: ${{ inputs.gcp_service_account_key }}
        export_default_credentials: true
    - name: Deploy
      env:
        IMGPKG_REGISTRY_HOSTNAME: ${{ inputs.registry }}
        IMGPKG_REGISTRY_USERNAME: ${{ inputs.username }}
        IMGPKG_REGISTRY_PASSWORD: ${{ inputs.password }}
      shell: bash
      run: |
        echo ::group::Setup environment
        set -euo pipefail
        app=${{ inputs.app }}
        environment=${{ inputs.environment }}
        region=${{ inputs.gcp_region }}
        cluster=${{ inputs.cluster }}
        version=${{ inputs.version }}
        registry=${{ inputs.registry }}
        image=${{ inputs.image }}
        echo ::endgroup::

        echo ::group::Authenticate to GKE
        gcloud container clusters get-credentials --region $region $cluster
        echo ::endgroup::

        echo ::group::Pull build
        bundle=$registry/$image:v$version
        echo Pulling $bundle
        imgpkg pull -b $bundle -o build
        echo ::endgroup::

        echo ::group::Deploy app
        kapp deploy \
          --namespace apps \
          --app $app-$environment \
          --yes \
          -f build/$environment.yml
        echo ::endgroup::
