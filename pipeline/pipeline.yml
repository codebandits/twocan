var_sources:
  - name: vars
    type: dummy
    config:
      vars:
        node-version: "15-alpine" # https://hub.docker.com/_/node
        jdk-version: "16-slim" # https://hub.docker.com/_/openjdk
        kaniko-version: "v1.6.0-debug" # https://git.io/JOEAf
        kustomize-version: "v4.1.2" # https://git.io/JOEpy
        kapp-version: "0.36.0" # https://git.io/JOEp7

resource_types:
  - name: bundle
    type: docker-image
    source:
      repository: us-docker.pkg.dev/tools-275701/codebandits/bundle-resource
      tag: latest

resources:
  - name: source
    type: git
    source:
      branch: main
      private_key: ((pipeline.git-private-key))
      uri: ((pipeline.git-repository))
      git_crypt_key: ((pipeline.git-crypt-key))
    check_every: 24h
    webhook_token: ((pipeline.git-webhook-token))
  - name: node-image
    type: registry-image
    source:
      repository: node
      tag: ((vars:node-version))
  - name: jdk-image
    type: registry-image
    source:
      repository: openjdk
      tag: ((vars:jdk-version))
  - name: kaniko-executor-image
    type: registry-image
    source:
      repository: gcr.io/kaniko-project/executor
      tag: ((vars:kaniko-version))
  - name: kapp-image
    type: registry-image
    source:
      repository: taylorsilva/carvel-kapp
      tag: ((vars:kapp-version))
  - name: kustomize-image
    type: registry-image
    source:
      repository: k8s.gcr.io/kustomize/kustomize
      tag: ((vars:kustomize-version))
  - name: frontend-image
    type: registry-image
    source:
      repository: us-central1-docker.pkg.dev/tools-275701/twocan/frontend
      tag: latest
      username: _json_key
      password: ((pipeline.gcp-service-account-registry))
  - name: server-image
    type: registry-image
    source:
      repository: us-central1-docker.pkg.dev/tools-275701/twocan/server
      tag: latest
      username: _json_key
      password: ((pipeline.gcp-service-account-registry))
  - name: twocan-build
    type: bundle
    source:
      registry: us-central1-docker.pkg.dev
      repository: tools-275701/twocan/build
      username: _json_key
      password: ((pipeline.gcp-service-account-registry))

jobs:
  - name: build-twocan
    serial: true
    plan:
      - in_parallel:
          - get: source
            trigger: true
          - get: node-image
          - get: jdk-image
          - get: kaniko-executor-image
          - get: kustomize-image
      - in_parallel:
          - do:
              - task: build-environments
                image: kustomize-image
                file: source/pipeline/tasks/build-environments.yml
          - do:
              - task: build-frontend
                image: node-image
                file: source/pipeline/tasks/build-frontend.yml
                output_mapping:
                  build: frontend-build
              - task: build-frontend-image
                image: kaniko-executor-image
                file: source/pipeline/tasks/build-image.yml
                input_mapping:
                  source: frontend-build
                output_mapping:
                  image: frontend-image
              - put: frontend-image
                params:
                  image: frontend-image/image.tar
          - do:
              - task: build-server
                image: jdk-image
                file: source/pipeline/tasks/build-server.yml
                output_mapping:
                  build: server-build
              - task: build-server-image
                image: kaniko-executor-image
                file: source/pipeline/tasks/build-image.yml
                input_mapping:
                  source: server-build
                output_mapping:
                  image: server-image
              - put: server-image
                params:
                  image: server-image/image.tar
      - put: twocan-build
        params:
          path: environments
  - name: acceptance
    plan:
      - in_parallel:
          - get: source
          - get: kapp-image
          - get: twocan-build
            trigger: true
            passed:
              - build-twocan
      - task: deploy
        image: kapp-image
        input_mapping:
          build: twocan-build
        file: source/pipeline/tasks/deploy.yml
        params:
          APP_NAME: twocan-acceptance
          FILE_PATH: acceptance.yml
          K8S_CONTEXT: torrio
          KUBECONFIG_FILE: ((pipeline.kubeconfig))
          GCP_SERVICE_ACCOUNT_FILE: ((pipeline.gcp-service-account-k8s))
  - name: production
    plan:
      - in_parallel:
          - get: source
          - get: kapp-image
          - get: twocan-build
            passed:
              - acceptance
      - task: deploy
        image: kapp-image
        input_mapping:
          build: twocan-build
        file: source/pipeline/tasks/deploy.yml
        params:
          APP_NAME: twocan-production
          FILE_PATH: production.yml
          K8S_CONTEXT: capone
          KUBECONFIG_FILE: ((pipeline.kubeconfig))
          GCP_SERVICE_ACCOUNT_FILE: ((pipeline.gcp-service-account-k8s))
